<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <link rel="apple-touch-icon" type="image/png" href="https://cpwebassets.codepen.io/assets/favicon/apple-touch-icon-5ae1a0698dcc2402e9712f7d01ed509a57814f994c660df9f7a952f3060705ee.png" />
  <meta name="apple-mobile-web-app-title" content="CodePen">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
  <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
  <link rel="mask-icon" type="image/x-icon" href="https://cpwebassets.codepen.io/assets/favicon/logo-pin-b4b4269c16397ad2f0f7a01bcdf513a1994f4c94b8af2f191c09eb0d601762b1.svg" color="#111" />
  <title>recipe</title>
  <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/1.0.1/tailwind.min.css'>
  <link rel='stylesheet' href='https://cdn.lineicons.com/1.0.1/LineIcons.min.css'>
  <style>
    body {
      display: flex;
      justify-content: flex-end;
    }

    main {
      width: 100%;
      max-width: 1024px;
      margin-right: 20px;

      flex: 1;
      display: flex;
      flex-direction: column;
      align-items: flex-end;
    }

    .toggle-button {
      background-color: #f5f0f4;
      border: none;
      color: rgb(238, 41, 41);
      padding: 10px 20px;
      text-align: center;
      text-decoration: none;
      display: inline-block;
      font-size: 16px;
      margin: 4px 2px;
      cursor: pointer;
      transition-duration: 0.4s;
      border-radius: 30px;
    }

    .toggle-button:hover {
      background-color: #fd8e8e;
    }

    .toggle-content {
      display: none;
    }

    .toggle-content.show {
      display: block;
    }
  </style>
</head>

<body translate="no">

  <div class="w-full min-h-screen bg-gray-200 p-3 sm:p-6 md:p-12">
    <div><%=currentUser.email%></div>
    <!-- <main class="w-full lg:w-3/4 mx-auto flex flex-wrap content-start"> -->
    <main class="w-full lg:w-3/4 mx-auto flex flex-wrap content-start" style="margin-right: 0;">
      <!-- Inner grid -->

      <% posts.forEach(function(post) { %>
      <div class="w-full p-1">
        <!-- Social-media-post-like card -->
        <div id="card-3" class="bg-gray-100 shadow-lg rounded overflow-hidden flex flex-wrap flex-col">
          <header class="p-3 flex items-center">
            <img src="nomima.jpg" alt="<%=post.uploader%>" class="rounded-full mr-2" width="80" style="border-radius: 50%;" />
            <div>
              <p class="w-full text-gray-800"><strong><%=post.uploader%></strong> <small class="text-light text-gray-600"><%=post.createdAt%></small></p>
              <p class="w-full text-gray-600 text-xs">@<%=post.uploader%></p>
            </div>
          </header>
          <h2><%=post.name %></h2>
          <div class="inline-block list-none text-sm text-white font-semibold">
            <div class="inline-block bg-blue-500 px-2 rounded-full"><span id="category-name"><%=post.category%></span></div>
            <div class="inline-block bg-green-400 px-2 rounded-full"> <span id="preparation-time"><%=post.preparationTime%></span> minutes preparation </div>
            <div class="inline-block bg-pink-500 px-2 rounded-full"><span id="amount-of-portions"><%=post.dishes%></span> portions </div>
          </div>



          <div id="recipe-details">
            <img src="download.png" alt="Recipe Image" id="recipe-image" style="float: right; margin-right: 50px;margin-top: -70px; width: 300px; border: 1px solid #333; border-radius: 5px;">

            <button id="IngredientsList-button" class="toggle-button" onclick="toggleIngredientsList(<%=post.name+'Ingredients-list'%>)">Ingredients List</button>
            <ul id=<%=post.name+'Ingredients-list'%> class="toggle-content">
            </ul>

            <button id="InstructionsList-button" class="toggle-button" onclick="toggleInstructions()">Instructions</button>
            <p id="instructions" class="toggle-content">
            </p>
            <footer class="w-full border-t border-gray-200 mt-3">
              <ul class="list-none w-full flex text-center" role="navigation">

                <li class="inline-block w-1/3">
                  <button class="block w-full p-2 hover:bg-gray-200 text-gray-700 hover:text-pink-600 focus:outline-none focus:bg-pink-100 focus:text-pink-600 like" data-doc="<%= post._id %>">
                    <span class="hidden md:inline"><%=post.likes %> </span>
                    <span class="lni-heart"></span>
                    <span class="hidden md:inline">Like</span>
                  </button>
                </li>
                <li class="inline-block w-1/3">
                  <button class="block w-full p-2 hover:bg-gray-200 text-gray-700 hover:text-blue-500 focus:outline-none focus:bg-blue-100 focus:text-blue-500 ">
                    <span class="lni-bookmark"></span>
                    <span class="hidden md:inline">Save</span>
                  </button>
                </li>
                <li class="inline-block w-1/3">
                  <button class="block w-full p-2 hover:bg-gray-200 text-gray-700 hover:text-blue-500 focus:outline-none focus:bg-blue-100 focus:text-blue-500">
                    <span class="lni-share-alt"></span>
                    <span class="hidden md:inline">Share</span>
                  </button>
                </li>
                <li class="inline-block w-1/3">
                  <button class="block w-full p-2 hover:bg-gray-200 text-gray-700 hover:text-gray-500 focus:outline-none focus:bg-gray-100 focus:text-gray-500 unlike" data-doc="<%= post._id %>">
                    <span class="hidden md:inline"><%=post.likes %> </span>
                    <span class="fas fa-heart"></span>
                    <span class="hidden md:inline">Unlike</span>
                  </button>
                </li>

                <li class="inline-block w-1/3">
                  <div class="block w-full p-2 text-gray-700 focus:bg-pink-100 focus:text-pink-600">
                    <span class="hidden md:inline"><%=post.AmountOfLikes %> </span>
                    <span class="lni-heart"></span>
                    <span class="hidden md:inline">Like</span>
                  </div>
                </li>
                <li class="inline-block w-1/3">
                  <button class="block w-full p-2 hover:bg-gray-200 text-gray-700 hover:text-indigo-600 focus:outline-none focus:bg-indigo-100 focus:text-indigo-600">
                    <span class="lni-comment-reply"></span>
                    <span class="hidden md:inline">Comment</span>
                  </button>
                </li>


                <li class="inline-block w-1/3">
                  <button class="block w-full p-2 hover:bg-gray-200 text-gray-700 hover:text-blue-500 focus:outline-none focus:bg-blue-100 focus:text-blue-500">
                    <span class="lni-pencil"></span>
                    <span class="hidden md:inline">Edit</span>
                  </button>
                </li>
                <li class="inline-block w-1/3">
                  <button class="block w-full p-2 hover:bg-gray-200 text-gray-700 hover:text-red-500 focus:outline-none focus:bg-red-100 focus:text-red-500 delete" data-doc="<%= post._id %>">
                    <span class="lni-trash"></span>
                    <span class="hidden md:inline">Delete</span>
                  </button>
                </li>

              </ul>
            </footer>
          </div>
        </div>
      </div>
      <% }) %>
    </main>
  </div>
  <script>
    const trashcans = document.querySelectorAll('button.delete');
    trashcans.forEach(trashcan => {
      trashcan.addEventListener('click', (e) => {
        const endpoint = `/viewRecipe/${trashcan.dataset.doc}`;
        fetch(endpoint, {
            method: 'DELETE',
          })
          .then(response => response.json())
          .then(data => window.location.href = data.redirect)
          .catch(err => console.log(err));
      });
    });

    // const likeboxes = document.querySelectorAll('button.like');
    // likeboxes.forEach(likebox => {
    //   likebox.addEventListener('click', (e) => {
    //     const endpoint = `/viewRecipe/like/${likebox.dataset.doc}`;
    //     fetch(endpoint, {
    //         method: 'POST',
    //       })
    //       .then(response => response.json())
    //       .then(data => window.location.href = data.redirect)
    //       .catch(err => console.log(err));
    //   });
    // });
    const likeboxes = document.querySelectorAll('button.like');
    const unlikeboxes = document.querySelectorAll('button.unlike');
    likeboxes.forEach(likebox => {
      likebox.addEventListener('click', (e) => {
        const endpoint = `/viewRecipe/like/${likebox.dataset.doc}`;
        fetch(endpoint, {
            method: 'POST',
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              // Update the button state
              const likeCountSpan = likebox.querySelector('.hidden.md\\:inline');
              const likeIcon = likebox.querySelector('.lni-heart');
              likeCountSpan.textContent = parseInt(likeCountSpan.textContent) + 1;
              likeIcon.classList.add('text-pink-600');
            }
          })
          .catch(err => console.log(err));
      });
    });

    // const unlikeboxes = document.querySelectorAll('button.unlike');
    // unlikeboxes.forEach(unlikebox => {
    //   unlikebox.addEventListener('click', (e) => {
    //     const endpoint = `/viewRecipe/unlike/${unlikebox.dataset.doc}`;
    //     fetch(endpoint, {
    //         method: 'POST',
    //       })
    //       .then(response => response.json())
    //       .then(data => window.location.href = data.redirect)
    //       .catch(err => console.log(err));
    //   });
    // });
    // const unlikeboxes = document.querySelectorAll('button.unlike');
    unlikeboxes.forEach(unlikebox => {
      unlikebox.addEventListener('click', (e) => {
        const endpoint = `/viewRecipe/unlike/${unlikebox.dataset.doc}`;
        fetch(endpoint, {
            method: 'POST',
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              // Update the button state
              const likeCountSpan = unlikebox.querySelector('.hidden.md\\:inline');
              const likeIcon = unlikebox.querySelector('.lni-heart');
              likeCountSpan.textContent = parseInt(likeCountSpan.textContent) - 1;
              likeIcon.classList.remove('text-pink-600');
            }
          })
          .catch(err => console.log(err));
      });
    });
  

    // unlikeboxes.forEach(unlikebox => {
    //   unlikebox.addEventListener('click', (e) => {
    //     e.preventDefault(); // Prevent the default behavior of the button click

    //     const endpoint = `/viewRecipe/unlike/${unlikebox.dataset.doc}`;
    //     const scrollY = window.scrollY;

    //     const xhr = new XMLHttpRequest();
    //     xhr.open('POST', endpoint, true);
    //     xhr.onreadystatechange = function() {
    //       if (xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {
    //         const data = JSON.parse(xhr.responseText);

    //         // Loop through all the like buttons and update their corresponding information
    //         likeboxes.forEach(button => {
    //           if (button.dataset.doc === unlikebox.dataset.doc) {
    //             const likeCountElement = button.querySelector('.hidden.md\\:inline');
    //             likeCountElement.textContent = data.recipe.likes;
    //           }
    //         });

    //         // Optionally, you can update any other relevant UI elements here

    //         // Scroll back to the desired position
    //         window.scrollTo(0, scrollY);
    //       }
    //     };
    //     xhr.send();
    //   });
    // });
  </script>
</body>